package main.java.heap;

/**
 * algo take min heap build min heap fom first k elemnt then compare rest k to
 * n-k with root if greater remove root insert element and heapify thats way at
 * the end there would be only k largest elkemnts
 * 
 * 
 *
 */
public class KthLargestElement {

	public static void klargest(int[] elemnts, int k) {
		int[] arr = new int[k];
		for (int i = 0; i < k; i++) {
			arr[i] = elemnts[i];
		}
		Heap h = new Heap(k);
		h.buildHeap(arr);
		for (int j = k; j < elemnts.length; j++) {
			int nextElm = elemnts[j];
			if (h.getHeapArray()[0] < nextElm) {
				h.getHeapArray()[0] = nextElm;
				h.maxHeapify(0);
			}
		}
		for (int i = 0; i < k; i++) {
			System.out.println(arr[i] + " ");
		}
		
	}
}
