package main.java.heap;

/**
 * elements are not more than k distance from there original positions algo
 * 
 * create a minheap from k+1 elements now extract min put in result array and
 * add a new from array and repeat think zero index or min value must lie from 0
 * to k+1 similarly 1 index or min must lie from 1 to k+2
 *
 */
public class SortKSortedArray {

	
	public static void sortNearlySorted(int [] elemnts,int k){
		int[] arr = new int[k+1];
		for (int i = 0; i < k+1; i++) {
			arr[i] = elemnts[i];
		}
		Heap h = new Heap(k);
		h.buildMaxHeap(arr);
		for (int j = k; j < elemnts.length; j++) {
			int nextElm = elemnts[j];
			if (h.getHeapArray()[0] > nextElm) {
				h.getHeapArray()[0] = nextElm;
				h.maxHeapify(0);
			}
		}
		for (int i = 0; i < k; i++) {
			System.out.print(h.getHeapArray()[i] + " ");
		}
		
	}
}
