package main.java.tree;

/**
 * dynamic programming problem problem is you have to make a largest set of
 * independent nodes so that no two nodes would have any edge
 * 
 * sol optimal substructure for any node x would be Lixss[x]=max(1+largest set
 * of grand children,optimal subsctructure of children of x)
 * 
 * @author rdixi3
 *
 */
public class LargestIndependentSet {

	public void recursiveLargestIndependentSet(TreeNode<Integer> root) {

		int childSet = recursiveLargestIndependentSet(root.getLeft()) + recursiveLargestIndependentSet(root.getRight());
		;

	}

}
