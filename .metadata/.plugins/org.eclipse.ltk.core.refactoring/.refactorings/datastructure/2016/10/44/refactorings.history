<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename method &apos;main.java.concurrency.lock.ReadWriteReentrantLock.readLock()&apos; to &apos;lockRead&apos;&#x0D;&#x0A;- Original project: &apos;datastructure&apos;&#x0D;&#x0A;- Original element: &apos;main.java.concurrency.lock.ReadWriteReentrantLock.readLock()&apos;&#x0D;&#x0A;- Renamed element: &apos;main.java.concurrency.lock.ReadWriteReentrantLock.lockRead()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;readLock&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;main.java.concurrency.lock{ReadWriteReentrantLock.java[ReadWriteReentrantLock~readLock" name="lockRead" references="true" stamp="1477375779144" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;main.java.concurrency.lock.ReadWriteReentrantLock&apos; to &apos;ReadWriteLock&apos;&#x0D;&#x0A;- Original project: &apos;datastructure&apos;&#x0D;&#x0A;- Original element: &apos;main.java.concurrency.lock.ReadWriteReentrantLock&apos;&#x0D;&#x0A;- Renamed element: &apos;main.java.concurrency.lock.ReadWriteLock&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;ReadWriteReentrantLock&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;main.java.concurrency.lock{ReadWriteReentrantLock.java[ReadWriteReentrantLock" matchStrategy="1" name="ReadWriteLock" qualified="false" references="true" similarDeclarations="false" stamp="1477375959245" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;main.java.concurrency.lock.ReadWriteReentrantLock.isOnlyWriter(...)&apos; to &apos;isWriter&apos;&#x0D;&#x0A;- Original project: &apos;datastructure&apos;&#x0D;&#x0A;- Original element: &apos;main.java.concurrency.lock.ReadWriteReentrantLock.isOnlyWriter(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;main.java.concurrency.lock.ReadWriteReentrantLock.isWriter(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;isOnlyWriter&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;main.java.concurrency.lock{ReadWriteReentrantLock.java[ReadWriteReentrantLock~isOnlyWriter~QThread;" name="isWriter" references="true" stamp="1477377338725" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;main.java.concurrency.concurrentapi.countdownlatch.CasheService&apos; to &apos;Service&apos;&#x0D;&#x0A;- Original project: &apos;datastructure&apos;&#x0D;&#x0A;- Original element: &apos;main.java.concurrency.concurrentapi.countdownlatch.CasheService&apos;&#x0D;&#x0A;- Renamed element: &apos;main.java.concurrency.concurrentapi.countdownlatch.Service&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;CasheService&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;main.java.concurrency.concurrentapi.countdownlatch{CasheService.java[CasheService" matchStrategy="1" name="Service" qualified="false" references="true" similarDeclarations="false" stamp="1477393864629" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename resource &apos;datastructure/src/main/java/concurrency/concurrentapi/cyclickbarrier&apos; to &apos;cyclicbarrier&apos;" description="Rename resource &apos;cyclickbarrier&apos;" flags="7" id="org.eclipse.ltk.core.refactoring.rename.resource" input="src/main/java/concurrency/concurrentapi/cyclickbarrier" name="cyclicbarrier" stamp="1477397856852" updateReferences="true"/>
</session>